-- Using this before changing the actual UI script itself to the new version (v2)

-- Universal Executor Detection
local function getExecutorName()
    -- Priority to accurate built-in identifiers
    if identifyexecutor then
        return identifyexecutor()
    elseif syn then
        return "Synapse X"
    elseif is_sirhurt_closure or sirhurt then
        return "SirHurt"
    elseif KRNL_LOADED or krnl then
        return "KRNL"
    elseif fluxus or isFluxus then
        return "Fluxus"
    elseif PROTOSMASHER_LOADED or protossmasher then
        return "ProtoSmasher"
    elseif secure_load or sentinel then
        return "Sentinel"
    elseif wrapfunction or is_scriptware or sw then
        return "Script-Ware"
    elseif hydrogen or isHydrogen then
        return "Hydrogen"
    elseif oxygen or isOxygen then
        return "Oxygen U"
    elseif getexecutorname and type(getexecutorname) == "function" then
        return getexecutorname()
    elseif solara or isSolara then
        return "Solara"
    elseif jjsploit or isJJSploit then
        return "JJSploit"
    elseif xeno or isXeno then
        return "Xeno"
    elseif comet or Comet then
        return "Comet"
    elseif electron or Electron then
        return "Electron"
    elseif Wave or isWave then
        return "Wave"
    elseif Arceus or isArceusX or get_hidden_gui or (syn == nil and isfolder and not writefile and not readfile) then
        return "Arceus X"
    elseif heploit or Helix then
        return "Helix"
    elseif Shadow or isShadow then
        return "Shadow"
    elseif Delta or isDelta then
        return "Delta"
    elseif easyexploits or isEasyExploits then
        return "EasyExploits"
    else
        return "Unknown Executor"
    end
end

-- Example usage
local executorName = getExecutorName()
print("Executor detected:", executorName)

-- Load the library first with error handling
local success, Library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/thebiggestpro01/Nexusoritation/refs/heads/main/KNOLib2"))()
end)

if not success or not Library then
    notif("Failed to load library!", 3)
    return
end

-- Define the colors for the themes
local colors = {
    SchemeColor = Color3.fromRGB(255, 215, 0),
        Background = Color3.fromRGB(31, 41, 43),
        Header = Color3.fromRGB(22, 29, 31),
        TextColor = Color3.fromRGB(255,255,255),
        ElementColor = Color3.fromRGB(22, 29, 31)
}

-- Create the main window with the colors defined above
local Window = Library.CreateLib("Nexusoritation - " .. executorName, colors)

-- Define all themes with preset color values
-- Services after window creation
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local playerName = Players.LocalPlayer.Name
local userId = Players.LocalPlayer.UserId

-- Notification helper
local function notif(txt, dur)
    StarterGui:SetCore("SendNotification", {
        Title = "Nexusoritation",
        Text = txt,
        Duration = dur or 3
    })
end
-- Filepath to save selected theme
local themeSaveFile = "NexusoritationTheme.txt"

-- Function to save theme choice
local function saveTheme(themeName)
    if writefile then
        writefile(themeSaveFile, themeName)
    elseif pcall(function() setclipboard(themeName) end) then
        -- fallback if no writefile, copy to clipboard
    end
end

-- Function to load saved theme choice
local function loadSavedTheme()
    if isfile and isfile(themeSaveFile) then
        local savedTheme = readfile(themeSaveFile)
        if themes[savedTheme] then -- check if the theme exists
            return savedTheme
        end
    end
    return "Private"  -- Default theme if none saved or invalid theme
end
-- Load the theme settings after the UI is created (with a short delay)
delay(0.5, function()
    local savedTheme = loadSavedTheme()
    Library:ChangeColor(themes[savedTheme])  -- Apply the saved theme
    themeDropdown:SetValue(savedTheme)  -- Set the value in dropdown
    notif("Loaded theme: " .. savedTheme)
end)

-- Welcome tab & sections
local Hi = Window:NewTab("Welcome!")
local Welcome = Hi:NewSection("Welcome to Nexusoritation, " .. playerName)
local Hello = Hi:NewSection("Your User ID is: " .. userId)
Hello:NewButton("Copy UserID", "Copies LocalPlayer's ID to clipboard", function()
    toclipboard(tostring(userId))
    notif("UserID copied to clipboard!")
end)

-- Universal tab & sections
local Tab = Window:NewTab("Universal")
local Section = Tab:NewSection("Universal")
local ESpection = Tab:NewSection("ESP")
-- Variables
local espEnabled = false
local espObjects = {}
local espFolder = Instance.new("Folder")
espFolder.Name = "ESP"
espFolder.Parent = game.CoreGui

-- ESP Functions
local function createESPForPlayer(player)
    if espObjects[player] or player == localPlayer then return end
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESPGui"
    billboard.Adornee = character.HumanoidRootPart
    billboard.Size = UDim2.new(0, 100, 0, 40)
    billboard.AlwaysOnTop = true
    billboard.Parent = espFolder

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(1, 0, 0)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.TextSize = 14
    nameLabel.Text = player.Name
    nameLabel.Parent = billboard

    espObjects[player] = billboard
end

local function removeESPForPlayer(player)
    if espObjects[player] then
        espObjects[player]:Destroy()
        espObjects[player] = nil
    end
end

local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if espEnabled and player ~= localPlayer then
            if not espObjects[player] then
                createESPForPlayer(player)
            end
        else
            removeESPForPlayer(player)
        end
    end
end

-- Connections
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if espEnabled then
            createESPForPlayer(player)
        end
    end)
    if espEnabled and player.Character then
        createESPForPlayer(player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeESPForPlayer(player)
end)

local FSection = Tab:NewSection("Fling")
local selectedPlayerDisplay = nil
local playerOptions = {}
local playerMap = {}
local dropdown -- will store the dropdown object for later updates

-- Helper to update dropdown options
local function updatePlayerList()
    local previousSelection = selectedPlayerDisplay
    playerOptions = {}
    playerMap = {}

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local display = "@" .. player.Name .. " (" .. player.DisplayName .. ")"
            table.insert(playerOptions, display)
            playerMap[display] = player
        end
    end

    if dropdown then
        dropdown:Refresh(playerOptions, true)
        if previousSelection and playerMap[previousSelection] then
            dropdown:SetValue(previousSelection)
            selectedPlayerDisplay = previousSelection
        else
            selectedPlayerDisplay = nil
        end
    end
end

-- Initial list setup
updatePlayerList()

-- React to players joining/leaving
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Create dropdown with reference
dropdown = FSection:NewDropdown("Choose player to fling", "Players on the server", playerOptions, function(selected)
    selectedPlayerDisplay = selected
    notif("Selected: " .. selected)
end)

-- Button to fling selected player
FSection:NewButton("Fling Selected Player", "Flings the chosen player", function()
    if not selectedPlayerDisplay then
        notif("No player selected!", 2)
        return
    end

    local target = playerMap[selectedPlayerDisplay]
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        local root = target.Character.HumanoidRootPart
        local thrust = Instance.new("BodyThrust")
        thrust.Force = Vector3.new(0, 100000, 0)
        thrust.Location = root.Position
        thrust.Parent = root

        wait(0.5)
        thrust:Destroy()
        notif("Flinged " .. target.Name, 2)
    else
        notif("Invalid target.", 2)
    end
end)
FSection:NewButton("Fling Random Player", "Selects and flings a random player", function()
    if #playerOptions == 0 then
        notif("No other players to fling!", 2)
        return
    end

    local randomDisplay = playerOptions[math.random(1, #playerOptions)]
    local target = playerMap[randomDisplay]
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        selectedPlayerDisplay = randomDisplay
        dropdown:SetValue(randomDisplay)

        local root = target.Character.HumanoidRootPart
        local thrust = Instance.new("BodyThrust")
        thrust.Force = Vector3.new(0, 100000, 0)
        thrust.Location = root.Position
        thrust.Parent = root

        wait(0.5)
        thrust:Destroy()
        notif("Flinged random player: " .. target.Name, 2)
    else
        notif("Invalid target.", 2)
    end
end)

-- NDS tab and sections
local Ntab = Window:NewTab("NDS")
local NDSec = Ntab:NewSection("NDS Script")
local UNDSec = Ntab:NewSection("Universal")

-- Create buttons in Universal Section (test button)
Section:NewLabel("Label to detect errors")

-- Another button in NDS section (test button)
NDSec:NewLabel("Another label to detect errors")

-- Error handling during button creation
local success, err = pcall(function()
    notif("UI created successfully", 3)
end)

if not success then
    notif("Error creating UI: " .. err, 5)
end
-- Example for NDSec buttons:
NDSec:NewButton("Ring Parts v6 by Lukas", "unanchored parts go vroom", function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Super-ring-parts-V6-Open-source-No-chat-26899"))()
end)
NDSec:NewButton("No Fall Damage", "lemme test the fall damage", function()
local pid = game.PlaceId
if pid ~= 189707 then
    print("not on nds")
    return
end
local rs = game:GetService("RunService")
local hb = rs.Heartbeat
local rsd = rs.RenderStepped
local lp = game.Players.LocalPlayer
local z = Vector3.zero
local function f(c)
    local r = c:WaitForChild("HumanoidRootPart")
    if r then
        local con
        con = hb:Connect(function()
            if not r.Parent then
                con:Disconnect()
            end
            local v = r.AssemblyLinearVelocity
            r.AssemblyLinearVelocity = z
            rsd:Wait()
            r.AssemblyLinearVelocity = v
        end)
    end
end
f(lp.Character)
lp.CharacterAdded:Connect(f)
end)
Section:NewButton("Jerk Off", "go nuts", function()
loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))("Spider Script")
end)
Section:NewButton("Fly GUI", "ButtonInfo", function()
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
end)
UNDSec:NewButton("Fly GUI", "ButtonInfo", function()
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
end)
Section:NewButton("FE Grab (doesn't work on mobile)", "ButtonInfo", function()
loadstring(game:HttpGet("https://pastebin.com/raw/Da2RAkmA"))()
end)
local ThemesTab = Window:NewTab("Settings")
local KeySection = ThemesTab:NewSection("Set keybinds")
KeySection:NewKeybind("Toggle UI Key", "Key used to toggle the UI", Enum.KeyCode.F, function()
Library:ToggleUI()
end)
Section:NewButton("FE Earrape (doesnt work if RespectFE is on)", "blast yo ears", function()
--// Doesn't work if RespectFilteringEnabled is enabled
print(game:GetService("SoundService").RespectFilteringEnabled)

--// Get's every sound instance in workspace and play's it (Earrape btw)
for _, sound in next, workspace:GetDescendants() do
   if sound:IsA("Sound") then
       sound:Play()
   end
end
end)
ESpection:NewToggle("ESP", false, function(value)
    espEnabled = value
    if not espEnabled then
        for player, _ in pairs(espObjects) do
            removeESPForPlayer(player)
        end
    else
        updateESP()
    end
end)
-- The script on the bottom is for the toggle button for mobile users!
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ScreenGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Toggle = Instance.new("TextButton")
Toggle.Name = "NexusToggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0, 50, 0,50)
Toggle.Font = Enum.Font.GothamBold
Toggle.Text = "Nexus"
Toggle.TextColor3 = Color3.fromRGB(248, 248, 248)
Toggle.TextSize = 16.000
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

local Corner = Instance.new("UICorner")
Corner.Name = "Corner"
Corner.Parent = Toggle

-- Stuff for changing the themes!
local themes = {
    Private = {
        SchemeColor = Color3.fromRGB(255, 215, 0),
        Background = Color3.fromRGB(31, 41, 43),
        Header = Color3.fromRGB(22, 29, 31),
        TextColor = Color3.fromRGB(255,255,255),
        ElementColor = Color3.fromRGB(22, 29, 31)
    },
    DarkTheme = {
        SchemeColor = Color3.fromRGB(64, 64, 64),
        Background = Color3.fromRGB(0, 0, 0),
        Header = Color3.fromRGB(0, 0, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 20, 20)
    },
    LightTheme = {
        SchemeColor = Color3.fromRGB(150, 150, 150),
        Background = Color3.fromRGB(255, 255, 255),
        Header = Color3.fromRGB(200, 200, 200),
        TextColor = Color3.fromRGB(0, 0, 0),
        ElementColor = Color3.fromRGB(224, 224, 224)
    },
    BloodTheme = {
        SchemeColor = Color3.fromRGB(227, 27, 27),
        Background = Color3.fromRGB(10, 10, 10),
        Header = Color3.fromRGB(5, 5, 5),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 20, 20)
    },
    GrapeTheme = {
        SchemeColor = Color3.fromRGB(166, 71, 214),
        Background = Color3.fromRGB(64, 50, 71),
        Header = Color3.fromRGB(36, 28, 41),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(74, 58, 84)
    },
    Ocean = {
        SchemeColor = Color3.fromRGB(86, 76, 251),
        Background = Color3.fromRGB(26, 32, 58),
        Header = Color3.fromRGB(38, 45, 71),
        TextColor = Color3.fromRGB(200, 200, 200),
        ElementColor = Color3.fromRGB(38, 45, 71)
    },
    Sentinel = {
        SchemeColor = Color3.fromRGB(230, 35, 69),
        Background = Color3.fromRGB(32, 32, 32),
        Header = Color3.fromRGB(24, 24, 24),
        TextColor = Color3.fromRGB(119, 209, 138),
        ElementColor = Color3.fromRGB(24, 24, 24)
    },
    Synapse = {
        SchemeColor = Color3.fromRGB(46, 48, 43),
        Background = Color3.fromRGB(13, 15, 12),
        Header = Color3.fromRGB(36, 38, 35),
        TextColor = Color3.fromRGB(152, 99, 53),
        ElementColor = Color3.fromRGB(24, 24, 24)
    },
    Serpent = {
        SchemeColor = Color3.fromRGB(0, 166, 58),
        Background = Color3.fromRGB(31, 41, 43),
        Header = Color3.fromRGB(22, 29, 31),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(22, 29, 31)
    },

    -- Custom themes added
    Midnight = {
        SchemeColor = Color3.fromRGB(0, 0, 50),
        Background = Color3.fromRGB(15, 15, 15),
        Header = Color3.fromRGB(0, 0, 40),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(30, 30, 30)
    },
    RoyalBlue = {
        SchemeColor = Color3.fromRGB(65, 105, 225),
        Background = Color3.fromRGB(25, 25, 112),
        Header = Color3.fromRGB(0, 0, 255),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(30, 30, 105)
    },
    NeonPink = {
        SchemeColor = Color3.fromRGB(255, 20, 147),
        Background = Color3.fromRGB(255, 105, 180),
        Header = Color3.fromRGB(255, 20, 147),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(255, 182, 193)
    },
    OceanBlue = {
        SchemeColor = Color3.fromRGB(0, 102, 204),
        Background = Color3.fromRGB(0, 51, 102),
        Header = Color3.fromRGB(0, 76, 153),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(0, 51, 102)
    },
    SunsetOrange = {
        SchemeColor = Color3.fromRGB(255, 69, 0),
        Background = Color3.fromRGB(255, 94, 77),
        Header = Color3.fromRGB(255, 69, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(255, 94, 77)
    }
}
local ThemesSection = ThemesTab:NewSection("Select your theme")

-- Function to apply the theme
local function applyTheme(theme)
    if themes[theme] then
        Library:ChangeColor("SchemeColor", themes[theme].SchemeColor)
        Library:ChangeColor("Background", themes[theme].Background)
        Library:ChangeColor("Header", themes[theme].Header)
        Library:ChangeColor("TextColor", themes[theme].TextColor)
        Library:ChangeColor("ElementColor", themes[theme].ElementColor)
    end
end

-- Create buttons to change themes
ThemesSection:NewButton("Private", "Apply Private Theme", function()
    applyTheme("Private")
end)

ThemesSection:NewButton("DarkTheme", "Apply Dark Theme", function()
    applyTheme("DarkTheme")
end)

ThemesSection:NewButton("LightTheme", "Apply Light Theme", function()
    applyTheme("LightTheme")
end)

ThemesSection:NewButton("BloodTheme", "Apply Blood Theme", function()
    applyTheme("BloodTheme")
end)

ThemesSection:NewButton("GrapeTheme", "Apply Grape Theme", function()
    applyTheme("GrapeTheme")
end)

ThemesSection:NewButton("Ocean", "Apply Ocean Theme", function()
    applyTheme("Ocean")
end)

ThemesSection:NewButton("Sentinel", "Apply Sentinel Theme", function()
    applyTheme("Sentinel")
end)

ThemesSection:NewButton("Synapse", "Apply Synapse Theme", function()
    applyTheme("Synapse")
end)

ThemesSection:NewButton("Serpent", "Apply Serpent Theme", function()
    applyTheme("Serpent")
end)

-- Custom themes
ThemesSection:NewButton("Midnight", "Apply Midnight Theme", function()
    applyTheme("Midnight")
end)

ThemesSection:NewButton("RoyalBlue", "Apply Royal Blue Theme", function()
    applyTheme("RoyalBlue")
end)

ThemesSection:NewButton("NeonPink", "Apply Neon Pink Theme", function()
    applyTheme("NeonPink")
end)

ThemesSection:NewButton("OceanBlue", "Apply Ocean Blue Theme", function()
    applyTheme("OceanBlue")
end)

ThemesSection:NewButton("SunsetOrange", "Apply Sunset Orange Theme", function()
    applyTheme("SunsetOrange")
end)

  notif("Nexusoritation v2 has been loaded succesfully!")
    local UserInputService = game:GetService("UserInputService")

if UserInputService.TouchEnabled then
    -- Customize UI or controls for mobile
      notif("You are using a phone/tablet, to toggle the UI, please press the Nexus button")
else
    -- Customize UI or controls for PC
      notif("You are using a PC, to toggle the UI, press the key F or change the key in Settings.")
end
